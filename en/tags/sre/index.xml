<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>sre on Allee Clark</title>
    <link>https://alleeclark.github.io/en/tags/sre/</link>
    <description>Recent content in sre on Allee Clark</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>alleeclark@gmail.com (allee)</managingEditor>
    <webMaster>alleeclark@gmail.com (allee)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 16 Jun 2020 12:00:06 +0900</lastBuildDate>
    
        <atom:link href="https://alleeclark.github.io/en/tags/sre/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Capacity Planning in the Cloud</title>
        <link>https://alleeclark.github.io/en/posts/capacity-planning-vs-quotas/</link>
        <pubDate>Tue, 16 Jun 2020 12:00:06 +0900</pubDate>
        <author>alleeclark@gmail.com (allee)</author>
        <atom:modified>Tue, 16 Jun 2020 12:00:06 +0900</atom:modified>
        <guid>https://alleeclark.github.io/en/posts/capacity-planning-vs-quotas/</guid>
        <description>I want to identify three methods in the industry under planning for capacity in the cloud.
SRE principals include capacity planning in order to ensure production readiness for a release possibly using the current performance as a baseline. Many books go in depth about why you should deal with capacity, performance with tools and ways for your cloud infrastructure.
The first method is using monitoring tools to help guide your capacity plan when you understand the system’s needs.</description>
        
        <dc:creator>Allee Clark</dc:creator>
        
        
        
        
          
            
              <category>sre</category>
            
          
            
              <category>cloud</category>
            
          
            
              <category>delivery</category>
            
          
            
              <category>capacity planning</category>
            
          
            
              <category>monitoring</category>
            
          
            
              <category>observability</category>
            
          
            
              <category>benchmarking</category>
            
          
            
              <category>open source</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>What decision should I make about an incident?</title>
        <link>https://alleeclark.github.io/en/posts/incident-decisions/</link>
        <pubDate>Thu, 28 Mar 2019 12:00:06 +0900</pubDate>
        <author>alleeclark@gmail.com (allee)</author>
        <atom:modified>Thu, 28 Mar 2019 12:00:06 +0900</atom:modified>
        <guid>https://alleeclark.github.io/en/posts/incident-decisions/</guid>
        <description>This is mainly written from a production engineer’s view. This might be helpful for an engineer who is response for some production service, and just wants a sanity check… On with the question. Sometimes you have legacy software that most of your company’s critical path relies on. That software hasn&amp;rsquo;t powered off in X amount of scary years. Some combination of documentation, automation of task and source control code is nonexistent.</description>
        
        <dc:creator>allee</dc:creator>
        
        
        
        
          
            
              <category>sre</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>